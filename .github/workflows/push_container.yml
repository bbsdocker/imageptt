name: push container for Debian Bookworm

on:
  push:
    branches: master
  schedule:
    - cron: "30 16 * * 0,4"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  main:
    strategy:
      matrix:
        include:
          # Build AMD64 images on ubuntu-24.04
          - runner: 'ubuntu-24.04'
            architecture: 'linux/amd64'
            debien_image_ver_name: 'bookworm'
            is_latest: ''
          - runner: 'ubuntu-24.04'
            architecture: 'linux/amd64'
            debien_image_ver_name: 'trixie'
            is_latest: 'ghcr.io/bbsdocker/imageptt:latest'

          # Build ARM64 images on ubuntu-24.04-arm
          - runner: 'ubuntu-24.04-arm'
            architecture: 'linux/arm64'
            debien_image_ver_name: 'bookworm'
            is_latest: ''
          - runner: 'ubuntu-24.04-arm'
            architecture: 'linux/arm64'
            debien_image_ver_name: 'trixie'
            is_latest: ''
    runs-on: ${{ matrix.runner }}
    steps:
      -
        name: Get current date
        id: date
        run: echo "{date}={$(date +'%Y%m%d')}" >> $GITHUB_OUTPUT
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            ghcr.io/bbsdocker/imageptt:${{ matrix.debien_image_ver_name }}
            ghcr.io/bbsdocker/imageptt:${{ matrix.debien_image_ver_name }}-latest
            ghcr.io/bbsdocker/imageptt:${{ matrix.debien_image_ver_name }}-${{ steps.date.outputs.date }}
            ${{ matrix.is_latest }}
          platforms: ${{ matrix.architecture }}
          build-args: |
            MY_DEBIAN_VERSION=${{ matrix.debien_image_ver_name }}
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
